#ifndef HASH_MAP_H
#define HASH_MAP_H
#include <algorithm>
#include <functional>
#include <vector>

using namespace std;

template <typename HashedObj>
class HashMap {
public:

bool Insert (const HashedObj & key , const HashedObj & value)
{
		hf(key
}


bool Insert (const HashedObj & key , const HashedObj && value)
{

}

HashedObj find(HashedObj element)
{
	
	if(array_[hf(element)]!=NULL)
	{
		return 	array_[hf(element)];
	}
	
	return NULL;
}

bool remove (const HashedObj & x)
{

}



private:
std::vector<HashedObj> array_;
static hash <HashedObj> hf;
size_t size;

};

#endif //HASH_MAP_H
